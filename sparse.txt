./goblint --enable warn.debug --enable dbg.regression  --set ana.activated[+] affeq --set sem.int.signed_overflow assume_none --set ana.relation.privatization top  tests/regression/63-affeq/01-rel_simple.c -v
Before assign_var_parallel m:
⊤
After assign_var_parallel multi_t:
⊤
Matrix in Domain m:

Switched Matrix in Domain switched_m:

Before normalizing we have m:
After normalizing we have m:
Before add_empty_columns m:

After add_empty_columns m:

Before assign_var_parallel m:
⊤
After assign_var_parallel multi_t:
⊤
After affineEq_vec m:
[ 0 0 0 2]

Before Matrix.rref_vec x:
 b:
[ 1 0 0 2]

Before rref_vec we have m:
v: [ 1 0 0 2]

Before normalizing we have m:
[ 1 0 0 2]
After normalizing we have m:
[ 1 0 0 2]
After affineEq_vec m:
[ 0 0 1 5]

Before reduce_col 1 of m:
[ 1 0 0 2]

After reduce_col 1 of m:
[ 1 0 0 2]

Before Matrix.rref_vec x:
[ 1 0 0 2]
 b:
[ 0 1 -1 5]

Before rref_vec we have m:
[ 1 0 0 2]
v: [ 0 1 -1 5]

Before normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
After normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
After affineEq_vec m:
[ 0 0 1 5]

Before reduce_col 1 of m:
[ 1 0 0 2]

After reduce_col 1 of m:
[ 1 0 0 2]

Before Matrix.rref_vec x:
[ 1 0 0 2]
 b:
[ 0 1 -1 5]

Before rref_vec we have m:
[ 1 0 0 2]
v: [ 0 1 -1 5]

Before normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
After normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
Before rref_vec we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
v: [ 0 -1 0 -6]

Before normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
[ 0 -1 0 -6]
After normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
[ 0 0 -1 -1]
Before rref_vec we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
v: [ 0 1 0 6]

Before normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
[ 0 1 0 6]
After normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
[ 0 0 1 1]
Before rref_vec we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
v: [ 0 -1 1 -5]

Before normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
[ 0 -1 1 -5]
After normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
[ 0 0 0 0]
Before rref_vec we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
v: [ 0 1 -1 5]

Before normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
[ 0 1 -1 5]
After normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
[ 0 0 0 0]
After affineEq_vec m:
[ 0 0 0 3]

Before reduce_col 0 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

After reduce_col 0 of m:
[ 0 0 0 0]
[ 0 1 -1 5]

Before Matrix.rref_vec x:
[ 0 1 -1 5]
 b:
[ 1 0 0 3]

Before rref_vec we have m:
[ 0 1 -1 5]
v: [ 1 0 0 3]

Before normalizing we have m:
[ 0 1 -1 5]
[ 1 0 0 3]
After normalizing we have m:
[ 1 0 0 3]
[ 0 1 -1 5]
After affineEq_vec m:
[ 0 1 0 3]

get_col 1 of m:
[ 1 0 0 3]
[ 0 1 -1 5]

[ 0 1]

Before map2 we have m:
[ 1 0 0 3]
[ 0 1 -1 5]

After map2 we have m:
[ 1 0 0 3]
[ 0 1 -1 8]

Before normalizing we have m:
[ 1 0 0 3]
[ 0 1 -1 8]
After normalizing we have m:
[ 1 0 0 3]
[ 0 1 -1 8]
get_col 0 of m:
[ 1 0 0 3]
[ 0 1 -1 8]

[ 1 0]

get_col 0 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 1 0]

get_col 1 of m:
[ 1 0 0 3]
[ 0 1 -1 8]

[ 0 1]

get_col 1 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 0 1]

get_col 2 of m:
[ 1 0 0 3]
[ 0 1 -1 8]

[ 0 -1]

get_col 2 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 0 -1]

Before keep_vals: 
col_a: [ 0 -1]
 col_b: [ 0 -1]

After keep_vals: 
col_a: [ 0 -1]
 col_b: [ 0 -1]

get_col 3 of m:
[ 1 0 0 3]
[ 0 1 -1 8]

[ 3 8]

get_col 3 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 2 5]

Before keep_vals: 
col_a: [ 2 5]
 col_b: [ 3 8]

After keep_vals: 
col_a: [ 2 5]
 col_b: [ 3 8]

Before rev col_a: [ 2 5]
 col_b: [ 3 8]

After rev col_a: [ 5 2]
 col_b: [ 8 3]

Before multiply_by_t col_a: [ -1 -3]
Before map2i m:
[ 1 0 0 3]
[ 0 1 -1 8]
v:[ -1 -3]

After map2i m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]

Before remove_row 1 of m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]

Before multiply_by_t col_a: [ -1 -3]
Before map2i m:
[ 1 0 0 2]
[ 0 1 -1 5]
v:[ -1 -3]

After map2i m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]

Before remove_row 1 of m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]

join a: [|i#320-2=0; j#321-k#322-5=0|] b: [|i#320-3=0; j#321-k#322-8=0|] -> [|3i#320-j#321+k#322-1=0|] 
get_col 0 of m:
[ 1 -1/3 1/3 1/3]

[ 1]

get_col 0 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 1 0]

get_col 1 of m:
[ 1 -1/3 1/3 1/3]

[ -1/3]

get_col 1 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 0 1]

Before map2i m:
[ 1 0 0 2]
[ 0 1 -1 5]
v:[ -1/3]

After map2i m:
[ 1 -1/3 1/3 1/3]
[ 0 1 -1 5]

Before remove_row 1 of m:
[ 1 -1/3 1/3 1/3]
[ 0 1 -1 5]

get_col 2 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

get_col 2 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

Before keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

After keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

get_col 3 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

get_col 3 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

Before keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

After keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

join a: [|i#320-2=0; j#321-k#322-5=0|] b: [|3i#320-j#321+k#322-1=0|] -> [|3i#320-j#321+k#322-1=0|] 
leq a: [|i#320-2=0; j#321-k#322-5=0|] b: [|3i#320-j#321+k#322-1=0|] -> true 
Widen a: [|i#320-2=0; j#321-k#322-5=0|] b: [|3i#320-j#321+k#322-1=0|]
get_col 0 of m:
[ 1 -1/3 1/3 1/3]

[ 1]

get_col 0 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 1 0]

get_col 1 of m:
[ 1 -1/3 1/3 1/3]

[ -1/3]

get_col 1 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 0 1]

Before map2i m:
[ 1 0 0 2]
[ 0 1 -1 5]
v:[ -1/3]

After map2i m:
[ 1 -1/3 1/3 1/3]
[ 0 1 -1 5]

Before remove_row 1 of m:
[ 1 -1/3 1/3 1/3]
[ 0 1 -1 5]

get_col 2 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

get_col 2 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

Before keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

After keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

get_col 3 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

get_col 3 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

Before keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

After keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

join a: [|i#320-2=0; j#321-k#322-5=0|] b: [|3i#320-j#321+k#322-1=0|] -> [|3i#320-j#321+k#322-1=0|] 
After affineEq_vec m:
[ 0 0 1 5]

Before reduce_col 1 of m:
[ 1 0 0 2]

After reduce_col 1 of m:
[ 1 0 0 2]

Before Matrix.rref_vec x:
[ 1 0 0 2]
 b:
[ 0 1 -1 5]

Before rref_vec we have m:
[ 1 0 0 2]
v: [ 0 1 -1 5]

Before normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
After normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 1 0 0 100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 1 0 0 100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 3 -1 0 0]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 3 -1 0 0]
After normalizing we have m:
[ 1 -1/3 2/3 2/3]
[ 0 0 1 1]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -3 1 0 0]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -3 1 0 0]
After normalizing we have m:
[ 1 -1/3 2/3 2/3]
[ 0 0 1 1]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 3 -1 1 1]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 3 -1 1 1]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -3 1 -1 -1]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -3 1 -1 -1]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]
After affineEq_vec m:
[ 1 0 0 1]

get_col 0 of m:
[ 1 -1/3 1/3 1/3]

[ 1]

Before map2 we have m:
[ 1 -1/3 1/3 1/3]

After map2 we have m:
[ 1 -1/3 1/3 4/3]

Before normalizing we have m:
[ 1 -1/3 1/3 4/3]
After normalizing we have m:
[ 1 -1/3 1/3 4/3]
After affineEq_vec m:
[ 0 1 0 3]

get_col 1 of m:
[ 1 -1/3 1/3 4/3]

[ -1/3]

Before map2 we have m:
[ 1 -1/3 1/3 4/3]

After map2 we have m:
[ 1 -1/3 1/3 1/3]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
get_col 0 of m:
[ 1 -1/3 1/3 1/3]

[ 1]

get_col 0 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 1 0]

get_col 1 of m:
[ 1 -1/3 1/3 1/3]

[ -1/3]

get_col 1 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 0 1]

Before map2i m:
[ 1 0 0 2]
[ 0 1 -1 5]
v:[ -1/3]

After map2i m:
[ 1 -1/3 1/3 1/3]
[ 0 1 -1 5]

Before remove_row 1 of m:
[ 1 -1/3 1/3 1/3]
[ 0 1 -1 5]

get_col 2 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

get_col 2 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

Before keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

After keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

get_col 3 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

get_col 3 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

Before keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

After keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

join a: [|i#320-2=0; j#321-k#322-5=0|] b: [|3i#320-j#321+k#322-1=0|] -> [|3i#320-j#321+k#322-1=0|] 
join a: [|3i#320-j#321+k#322-1=0|] b: [|3i#320-j#321+k#322-1=0|] -> [|3i#320-j#321+k#322-1=0|] 
leq a: [|3i#320-j#321+k#322-1=0|] b: [|3i#320-j#321+k#322-1=0|] -> true 
Widen a: [|3i#320-j#321+k#322-1=0|] b: [|3i#320-j#321+k#322-1=0|]
join a: [|3i#320-j#321+k#322-1=0|] b: [|3i#320-j#321+k#322-1=0|] -> [|3i#320-j#321+k#322-1=0|] 
After affineEq_vec m:
[ 0 0 1 5]

Before reduce_col 1 of m:
[ 1 0 0 2]

After reduce_col 1 of m:
[ 1 0 0 2]

Before Matrix.rref_vec x:
[ 1 0 0 2]
 b:
[ 0 1 -1 5]

Before rref_vec we have m:
[ 1 0 0 2]
v: [ 0 1 -1 5]

Before normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
After normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 1 0 0 100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 1 0 0 100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 3 -1 0 0]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 3 -1 0 0]
After normalizing we have m:
[ 1 -1/3 2/3 2/3]
[ 0 0 1 1]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -3 1 0 0]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -3 1 0 0]
After normalizing we have m:
[ 1 -1/3 2/3 2/3]
[ 0 0 1 1]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 3 -1 1 1]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 3 -1 1 1]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -3 1 -1 -1]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -3 1 -1 -1]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]
After affineEq_vec m:
[ 1 0 0 1]

get_col 0 of m:
[ 1 -1/3 1/3 1/3]

[ 1]

Before map2 we have m:
[ 1 -1/3 1/3 1/3]

After map2 we have m:
[ 1 -1/3 1/3 4/3]

Before normalizing we have m:
[ 1 -1/3 1/3 4/3]
After normalizing we have m:
[ 1 -1/3 1/3 4/3]
After affineEq_vec m:
[ 0 1 0 3]

get_col 1 of m:
[ 1 -1/3 1/3 4/3]

[ -1/3]

Before map2 we have m:
[ 1 -1/3 1/3 4/3]

After map2 we have m:
[ 1 -1/3 1/3 1/3]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
get_col 0 of m:
[ 1 -1/3 1/3 1/3]

[ 1]

get_col 0 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 1 0]

get_col 1 of m:
[ 1 -1/3 1/3 1/3]

[ -1/3]

get_col 1 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 0 1]

Before map2i m:
[ 1 0 0 2]
[ 0 1 -1 5]
v:[ -1/3]

After map2i m:
[ 1 -1/3 1/3 1/3]
[ 0 1 -1 5]

Before remove_row 1 of m:
[ 1 -1/3 1/3 1/3]
[ 0 1 -1 5]

get_col 2 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

get_col 2 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

Before keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

After keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

get_col 3 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

get_col 3 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

Before keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

After keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

join a: [|i#320-2=0; j#321-k#322-5=0|] b: [|3i#320-j#321+k#322-1=0|] -> [|3i#320-j#321+k#322-1=0|] 
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 1 0 0 100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 1 0 0 100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 3 -1 0 0]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 3 -1 0 0]
After normalizing we have m:
[ 1 -1/3 2/3 2/3]
[ 0 0 1 1]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -3 1 0 0]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -3 1 0 0]
After normalizing we have m:
[ 1 -1/3 2/3 2/3]
[ 0 0 1 1]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 3 -1 1 1]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 3 -1 1 1]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -3 1 -1 -1]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -3 1 -1 -1]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]
Before dim_remove m:
[ 1 -1/3 1/3 1/3]
Before reduce_col 0 of m:
[ 1 -1/3 1/3 1/3]

After reduce_col 0 of m:
[ 0 0 0 0]

Before reduce_col 1 of m:
[ 0 0 0 0]

After reduce_col 1 of m:
[ 0 0 0 0]

Before reduce_col 2 of m:
[ 0 0 0 0]

After reduce_col 2 of m:
[ 0 0 0 0]

Before del_cols cols_length=3 sorted_length=3 
m:
[ 0 0 0 0]

After dim_remove m':
Before del_cols cols_length=3 sorted_length=3 
m:
[ 0 0 0 0]

Before add_empty_columns m:

After add_empty_columns m:

Before assign_var_parallel m:
⊤
After assign_var_parallel multi_t:
⊤
After affineEq_vec m:
[ 0 0 0 2]

Before Matrix.rref_vec x:
 b:
[ 1 0 0 2]

Before rref_vec we have m:
v: [ 1 0 0 2]

Before normalizing we have m:
[ 1 0 0 2]
After normalizing we have m:
[ 1 0 0 2]
After affineEq_vec m:
[ 0 0 1 5]

Before reduce_col 1 of m:
[ 1 0 0 2]

After reduce_col 1 of m:
[ 1 0 0 2]

Before Matrix.rref_vec x:
[ 1 0 0 2]
 b:
[ 0 1 -1 5]

Before rref_vec we have m:
[ 1 0 0 2]
v: [ 0 1 -1 5]

Before normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
After normalizing we have m:
[ 1 0 0 2]
[ 0 1 -1 5]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 1 0 0 100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 1 0 0 100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 3 -1 0 0]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 3 -1 0 0]
After normalizing we have m:
[ 1 -1/3 2/3 2/3]
[ 0 0 1 1]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -3 1 0 0]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -3 1 0 0]
After normalizing we have m:
[ 1 -1/3 2/3 2/3]
[ 0 0 1 1]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 3 -1 1 1]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 3 -1 1 1]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -3 1 -1 -1]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -3 1 -1 -1]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]
[Warning][Assert] Assertion "(3 * i - j) + k == 1" is unknown. Expected: SUCCESS -> failed (tests/regression/63-affeq/01-rel_simple.c:13:9-13:44)
After affineEq_vec m:
[ 1 0 0 1]

get_col 0 of m:
[ 1 -1/3 1/3 1/3]

[ 1]

Before map2 we have m:
[ 1 -1/3 1/3 1/3]

After map2 we have m:
[ 1 -1/3 1/3 4/3]

Before normalizing we have m:
[ 1 -1/3 1/3 4/3]
After normalizing we have m:
[ 1 -1/3 1/3 4/3]
After affineEq_vec m:
[ 0 1 0 3]

get_col 1 of m:
[ 1 -1/3 1/3 4/3]

[ -1/3]

Before map2 we have m:
[ 1 -1/3 1/3 4/3]

After map2 we have m:
[ 1 -1/3 1/3 1/3]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
get_col 0 of m:
[ 1 -1/3 1/3 1/3]

[ 1]

get_col 0 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 1 0]

get_col 1 of m:
[ 1 -1/3 1/3 1/3]

[ -1/3]

get_col 1 of m:
[ 1 0 0 2]
[ 0 1 -1 5]

[ 0 1]

Before map2i m:
[ 1 0 0 2]
[ 0 1 -1 5]
v:[ -1/3]

After map2i m:
[ 1 -1/3 1/3 1/3]
[ 0 1 -1 5]

Before remove_row 1 of m:
[ 1 -1/3 1/3 1/3]
[ 0 1 -1 5]

get_col 2 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

get_col 2 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

Before keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

After keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

get_col 3 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

get_col 3 of m:
[ 1 -1/3 1/3 1/3]

[ 1/3]

Before keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

After keep_vals: 
col_a: [ 1/3]
 col_b: [ 1/3]

join a: [|i#320-2=0; j#321-k#322-5=0|] b: [|3i#320-j#321+k#322-1=0|] -> [|3i#320-j#321+k#322-1=0|] 
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 1 0 0 100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 1 0 0 100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -1 0 0 -100]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -1 0 0 -100]
After normalizing we have m:
[ 1 -301/900 301/900 1/900]
[ 0 1/300 -1/300 299/300]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 3 -1 0 0]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 3 -1 0 0]
After normalizing we have m:
[ 1 -1/3 2/3 2/3]
[ 0 0 1 1]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -3 1 0 0]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -3 1 0 0]
After normalizing we have m:
[ 1 -1/3 2/3 2/3]
[ 0 0 1 1]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ 3 -1 1 1]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 3 -1 1 1]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]
Before rref_vec we have m:
[ 1 -1/3 1/3 1/3]
v: [ -3 1 -1 -1]

Before normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ -3 1 -1 -1]
After normalizing we have m:
[ 1 -1/3 1/3 1/3]
[ 0 0 0 0]
[Warning][Assert] Assertion "(3 * i - j) + k == 1" is unknown. Expected: SUCCESS -> failed (tests/regression/63-affeq/01-rel_simple.c:17:5-17:40)
Before dim_remove m:
[ 1 -1/3 1/3 1/3]
Before reduce_col 0 of m:
[ 1 -1/3 1/3 1/3]

After reduce_col 0 of m:
[ 0 0 0 0]

Before reduce_col 1 of m:
[ 0 0 0 0]

After reduce_col 1 of m:
[ 0 0 0 0]

Before reduce_col 2 of m:
[ 0 0 0 0]

After reduce_col 2 of m:
[ 0 0 0 0]

Before del_cols cols_length=3 sorted_length=3 
m:
[ 0 0 0 0]

After dim_remove m':
Before del_cols cols_length=3 sorted_length=3 
m:
[ 0 0 0 0]

[Info][Deadcode] Logical lines of code (LLoC) summary:
  live: 9
  dead: 0
  total lines: 9
See result/index.xml
